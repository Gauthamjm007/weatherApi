{"version":3,"sources":["components/styledComponents/SignInHeader.js","components/SignIn/SignIn.js"],"names":["Header","styled","h1","connect","props","SignInSchema","Yup","shape","Name","min","max","required","Email","email","password","matches","confirmPassword","oneOf","initialValues","terms_services","validationSchema","onSubmit","values","setSubmitting","dispatch","startAddUsers","history","push","setTimeout","touched","errors","handleChange","handleBlur","handleSubmit","isSubmitting","className","type","id","name","placeholder","value","onChange","onBlur","htmlFor","disabled","style","marginTop","src","alt","to","marginLeft"],"mappings":"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","file":"static/js/8.ae05ab1d.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nconst Header = styled.h1`\r\n  color: #111;\r\n  font-family: \"Poppins\", sans-serif;\r\n  font-size: 50px;\r\n  font-weight: bold;\r\n  letter-spacing: -1px;\r\n  line-height: 1;\r\n  text-align: left;\r\n`;\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"../styledComponents/SignInHeader\";\r\nimport { Formik } from \"formik\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { startAddUsers } from \"../../action/userAction\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\n\r\nfunction SignIn(props) {\r\n  const SignInSchema = Yup.object().shape({\r\n    Name: Yup.string()\r\n      .min(4, \"Too Short!\")\r\n      .max(20, \"Too Long!\")\r\n      .required(\"Username Required\"),\r\n    Email: Yup.string().email().required(\"Email Required\"),\r\n    password: Yup.string()\r\n      .min(8, \"Too Short password\")\r\n      .max(50, \"Too Long password!\")\r\n      .matches(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8}/,\r\n        \"Minimum eight characters, at least one uppercase letter, one lowercase letter and one number\"\r\n      )\r\n      .required(\"Password Required\"),\r\n    confirmPassword: Yup.string().oneOf(\r\n      [Yup.ref(\"password\"), null],\r\n      \"Passwords must match\"\r\n    ),\r\n  });\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        Name: \"\",\r\n        Email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        terms_services: false,\r\n      }}\r\n      validationSchema={SignInSchema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        const redirect = () => {\r\n          return props.history.push(\"/signup\");\r\n        };\r\n        props.dispatch(\r\n          startAddUsers(values.Name, values.Email, values.password, redirect)\r\n        );\r\n        setTimeout(() => {\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n      }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-md-5\">\r\n                <br />\r\n                <Header>Sign In</Header>\r\n                <br />\r\n                <div className=\"form-group has-search\">\r\n                  <span className=\"fa fa-user form-control-feedback\"></span>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"Name\"\r\n                    name=\"Name\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Your Name\"\r\n                    value={values.Name}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </div>\r\n                {errors.Name && touched.Name ? <div>{errors.Name}</div> : null}\r\n                <br />\r\n                <div className=\"form-group has-search\">\r\n                  <span className=\"fas fa-envelope form-control-feedback\"></span>\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"Email\"\r\n                    name=\"Email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Your Email\"\r\n                    value={values.Email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </div>\r\n                {errors.Email && touched.Email ? (\r\n                  <div>{errors.Email}</div>\r\n                ) : null}\r\n                <br />\r\n                <div className=\"form-group has-search\">\r\n                  <span className=\"fa fa-lock form-control-feedback\"></span>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </div>\r\n                {errors.password && touched.password ? (\r\n                  <div>{errors.password}</div>\r\n                ) : null}\r\n                <br />\r\n                <div className=\"form-group has-search\">\r\n                  <span className=\"fas fa-lock-open form-control-feedback\"></span>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"confirmPassword\"\r\n                    name=\"confirmPassword\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Repeat Password\"\r\n                    value={values.confirmPassword}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </div>\r\n                {errors.confirmPassword && touched.confirmPassword ? (\r\n                  <div>{errors.confirmPassword}</div>\r\n                ) : null}\r\n                <br />\r\n                <div className=\"form-check\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={values.terms_services}\r\n                    name=\"terms_services\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className=\"form-check-input\"\r\n                    id=\"checkbox\"\r\n                  />\r\n                  <label className=\"form-check-label\" htmlFor=\"checkbox\">\r\n                    I agree on statements on Terms and services\r\n                  </label>\r\n                </div>\r\n                <br />\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting || values.terms_services === false}\r\n                  className=\"btn btn-primary btn-lg\"\r\n                >\r\n                  Register\r\n                </button>\r\n                <br />\r\n                <br />\r\n              </div>\r\n              <div className=\"col-md-5 offset-md-2\" style={{ marginTop: 50 }}>\r\n                <img src=\"signup-image.webp\" alt=\"Sign up\" />\r\n                <br />\r\n                <br />\r\n                <Link to=\"/signup\">\r\n                  <p style={{ marginLeft: 100 }}>I am already a member</p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default connect()(SignIn);\r\n"],"sourceRoot":""}